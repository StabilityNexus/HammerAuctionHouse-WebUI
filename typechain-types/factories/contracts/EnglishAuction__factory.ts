/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EnglishAuction,
  EnglishAuctionInterface,
} from "../../contracts/EnglishAuction";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "Id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "imgUrl",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "auctioneer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum Auction.AuctionType",
        name: "auctionType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "auctionedToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "auctionedTokenIdOrAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "biddingToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startingBid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minBidDelta",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadlineExtension",
        type: "uint256",
      },
    ],
    name: "AuctionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bidAmount",
        type: "uint256",
      },
    ],
    name: "bidPlaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountWithdrawn",
        type: "uint256",
      },
    ],
    name: "fundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "auctionedTokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "auctionedTokenIdOrAmount",
        type: "uint256",
      },
    ],
    name: "itemWithdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "auctionCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "auctions",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "imgUrl",
        type: "string",
      },
      {
        internalType: "address",
        name: "auctioneer",
        type: "address",
      },
      {
        internalType: "enum Auction.AuctionType",
        name: "auctionType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "auctionedToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "auctionedTokenIdOrAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "biddingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "startingBid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "availableFunds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minBidDelta",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "highestBid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadlineExtension",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isClaimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "bids",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "imgUrl",
        type: "string",
      },
      {
        internalType: "enum Auction.AuctionType",
        name: "auctionType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "auctionedToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "auctionedTokenIdOrAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "biddingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "startingBid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minBidDelta",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadlineExtension",
        type: "uint256",
      },
    ],
    name: "createAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bidAmount",
        type: "uint256",
      },
    ],
    name: "placeBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
    ],
    name: "withdrawItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346019576000805561176b908161001f8239f35b600080fdfe60a0604052600436101561001257600080fd5b6000803560e01c8063150b7a021461130d578063155dd5ee146111ec5780633f1ffcec146111a8578063571a26a01461101f57806357c90de514610c955780638d9a3e9314610a02578063a7e76644146109e55763fe230fa91461007557600080fd5b346109e2576101603660031901126109e25760043567ffffffffffffffff81116109e0576100a7903690600401611567565b60243567ffffffffffffffff81116109dc576100c7903690600401611567565b9060443567ffffffffffffffff81116109d8576100e8903690600401611567565b600260643510156109d857608435906001600160a01b03821682036109d45760c4356001600160a01b03811681036109d05761012435845115610994576001600160a01b0384161561093e576001600160a01b038216156108ea57801561089257606435610834576001600160a01b0384163b1561082557604051632142170760e11b815233600482015230602482015260a435604482015287908181606481836001600160a01b038b165af1801561082957610810575b50506101ad905b42611611565b91865460405190610220820182811067ffffffffffffffff8211176107fc5760405280825286602083015287604083015282606083015233608083015260643560a083015260018060a01b03861660c083015260a43560e083015260018060a01b03841661010083015260e435610120830152886101408301526101043561016083015288610180830152336101a0830152846101c0830152610144356101e083015288610200830152885260016020526040882081518155602082015180519067ffffffffffffffff821161065257819061028c6001850154611425565b601f81116107aa575b50602090601f831160011461073c578c92610731575b50508160011b916000199060031b1c19161760018201555b604082015180519067ffffffffffffffff82116106525781906102e96002850154611425565b601f81116106df575b50602090601f8311600114610671578c92610666575b50508160011b916000199060031b1c19161760028201555b606082015180519067ffffffffffffffff82116106525781906103466003850154611425565b601f8111610600575b50602090601f8311600114610597578c9261058c575b50508160011b916000199060031b1c19161760038201555b60808201516004820180546001600160a01b0319166001600160a01b039290921691909117905560a082015160028110156105785760048201805460ff60a01b191660a09290921b60ff60a01b1691909117905560c08201516005820180546001600160a01b03199081166001600160a01b039384161790915560e08401516006840155610100840151600784018054831691841691909117905561012084015160088401556101408401516009840155610160840151600a840155610180840151600b8401556101a0840151600c8401805490921692169190911790556101c0820151600d8201556101e0820151600e8201556102009190910151600f909101805491151560ff1660ff1992909216919091179055865495600019871461056457916105077fa76b9e3326fbfce8aacfe521d87982a0bdadbc6590ec30224be8d11fe6c54b279694926104f96104eb979560018b018c556040519889986101808a526101808a0190611503565b9088820360208a0152611503565b908682036040880152611503565b9233606086015261051d60808601606435611544565b6001600160a01b0390811660a086015260a43560c08601521660e084015260e43561010084015261010435610120840152610140830152610144356101608301520390a280f35b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b8a52602160045260248afd5b015190503880610365565b600385018d52818d209250601f1984168d5b8181106105e857509084600195949392106105cf575b505050811b01600382015561037d565b015160001960f88460031b161c191690553880806105bf565b929360206001819287860151815501950193016105a9565b909150600384018c5260208c20601f840160051c81016020851061064b575b84939291908e5b601f840160051c8301821061063d5750505061034f565b81558594506001018e610626565b508061061f565b634e487b7160e01b8b52604160045260248bfd5b015190503880610308565b9250600284018c52808c20908c935b601f19841685106106c4576001945083601f198116106106ab575b505050811b016002820155610320565b015160001960f88460031b161c1916905538808061069b565b81810151835560209485019460019093019290910190610680565b909150600284018c5260208c20601f840160051c81016020851061072a575b84939291908e5b601f840160051c8301821061071c575050506102f2565b81558594506001018e610705565b50806106fe565b0151905038806102ab565b9250600184018c52808c20908c935b601f198416851061078f576001945083601f19811610610776575b505050811b0160018201556102c3565b015160001960f88460031b161c19169055388080610766565b8181015183556020948501946001909301929091019061074b565b909150600184018c5260208c20601f840160051c8101602085106107f5575b84939291908e5b601f840160051c830182106107e757505050610295565b81558594506001018e6107d0565b50806107c9565b634e487b7160e01b8a52604160045260248afd5b8161081a916113a6565b6108255786386101a0565b8680fd5b6040513d84823e3d90fd5b6101ad9061084560a4351515611634565b6040516323b872dd60e01b602082015233602482015230604482015260a435606480830191909152815261088d9061087e6084826113a6565b6001600160a01b0387166116ce565b6101a7565b60405162461bcd60e51b815260206004820152602a60248201527f4475726174696f6e206d7573742062652067726561746572207468616e207a65604482015269726f207365636f6e647360b01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602660248201527f42696464696e6720746f6b656e2061646472657373206d7573742062652070726044820152651bdd9a59195960d21b6064820152608490fd5b60405162461bcd60e51b815260206004820152602860248201527f41756374696f6e656420746f6b656e2061646472657373206d757374206265206044820152671c1c9bdd9a59195960c21b6064820152608490fd5b60405162461bcd60e51b815260206004820152601460248201527313985b59481b5d5cdd081899481c1c995cd95b9d60621b6044820152606490fd5b8580fd5b8480fd5b8380fd5b8280fd5b505b80fd5b50346109e257806003193601126109e25760209054604051908152f35b50346109e25760203660031901126109e25760043590610a2481548310611585565b818152600160205260408120600c81018054909391906001600160a01b03163303610c5b57610a58600d82015442116115c5565b600f8101805460ff8116610c165760ff19166001179055600481015460a01c60ff16906002821015610c025760058101805460069092018054909391926001600160a01b031691610b8557813b156109d057604051632142170760e11b815230600482015233602482015260448101919091529085908290606490829084905af18015610b7a57610b42575b50610b3c7f0c0a9cbb25df0ac8d473828f09da92621e93a8ecc1b2054a17700ccaf2053a1c9394955b5491549254604080516001600160a01b0394851681529490931660208501529183019190915281906060820190565b0390a280f35b84610b727f0c0a9cbb25df0ac8d473828f09da92621e93a8ecc1b2054a17700ccaf2053a1c9596610b3c936113a6565b949350610ae4565b6040513d87823e3d90fd5b95610bfd610bea610b3c93610bf88a610bc27f0c0a9cbb25df0ac8d473828f09da92621e93a8ecc1b2054a17700ccaf2053a1c9a9b9c1515611634565b60405163a9059cbb60e01b602082015233602482015260448101919091529283906064820190565b03601f1981018452836113a6565b6116ce565b610b0d565b634e487b7160e01b84526021600452602484fd5b60405162461bcd60e51b815260206004820152601860248201527f41756374696f6e20686164206265656e20736574746c656400000000000000006044820152606490fd5b60405162461bcd60e51b81526020600482015260126024820152712737ba1030bab1ba34b7b7103bb4b73732b960711b6044820152606490fd5b50346109e25760403660031901126109e257600435602435610cb983548310611585565b818352600160205260408320600d8101918254421015610fe657801580610f9257600b83019384548015908180158093610f62575b15610f075791610ec6575b5015610e5b577fb709f01451ed0783e7600e0c31d1df63da03b66b3caf7cddde880f0774332ba694610e166007610b3c96898b52600260205260408b2060018060a01b0333168c5260205260408b20610d53888254611611565b9055898b52600260205260408b2060018060a01b0333168c5260205260408b20548455600c81019460018060a01b0333166bffffffffffffffffffffffff60a01b8754161786558a8c52600260205260408c2060018060a01b0333168d5260205260408c20546009830155610dcd600e8301548254611611565b90550193610de560018060a01b038654169115611634565b6040516323b872dd60e01b60208201523360248201523060448201526064810187905290610bf88260848101610bea565b549081610e39575b50506040805133815260208101939093529192839283019150565b91549154610e53926001600160a01b03918216911661167f565b388080610e1e565b60405162461bcd60e51b815260206004820152603b60248201527f42696420616d6f756e742073686f756c64206578636565642063757272656e7460448201527f206269642062792061746c65617374206d696e42696444656c746100000000006064820152608490fd5b905086885260026020526040882060018060a01b0333168952602052610eff610ef38560408b2054611611565b91600a87015490611611565b111538610cf9565b60405162461bcd60e51b815260206004820152602d60248201527f4669727374206269642073686f756c642062652067726561746572207468616e60448201526c081cdd185c9d1a5b99c8189a59609a1b6064820152608490fd5b50888a52600260209081526040808c20338d529091528a2054610f86908790611611565b60088801541115610cee565b60405162461bcd60e51b815260206004820152602660248201527f42696420616d6f756e742073686f756c642062652067726561746572207468616044820152656e207a65726f60d01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526011602482015270105d58dd1a5bdb881a185cc8195b991959607a1b6044820152606490fd5b50346109e25760203660031901126109e257600435815260016020526040902080546001820161104e9061145f565b9161105b6002820161145f565b926110686003830161145f565b93600483015494600160a01b600190036005850154166006850154600160a01b60019003600787015416600887015490600988015492600a89015494600b8a015496600160a01b60019003600c8c01541698600d8c01549a600e8d01549c600f015460ff169d604051608052608051526080516020016102209052608051610220016110f391611503565b60805181036080516040015261110891611503565b60805181036080516060015261111d91611503565b608080516001600160a01b038f169082015251909c6111469160a09081019160ff911c16611544565b60805160c0015260805160e00152608051610100015260805161012001526080516101400152608051610160015260805161018001526080516101a001526080516101c001526080516101e00152151560805161020001526080519003608051f35b50346109e25760403660031901126109e25760406020916111c7611390565b6004358252600284528282206001600160a01b03909116825283522054604051908152f35b50346109e25760203660031901126109e25760043561120d82548210611585565b808252600160208181526040808520848652929091528320600401546001600160a01b031633036112d657600981018054801561129c5761129281848760209561127d600d7f85470dff43902d75670eac38df826d0456b2ba2939a2e8662959a8143013554d99015442116115c5565b556007015433906001600160a01b031661167f565b604051908152a280f35b60405162461bcd60e51b81526020600482015260126024820152714e6f2066756e647320617661696c61626c6560701b6044820152606490fd5b60405162461bcd60e51b815260206004820152600f60248201526e4e6f742061756374696f6e6565722160881b6044820152606490fd5b50346109e25760803660031901126109e257611327611375565b50611330611390565b5060643567ffffffffffffffff81116109e057366023820112156109e0576113629036906024816004013591016113de565b50604051630a85bd0160e11b8152602090f35b600435906001600160a01b038216820361138b57565b600080fd5b602435906001600160a01b038216820361138b57565b90601f8019910116810190811067ffffffffffffffff8211176113c857604052565b634e487b7160e01b600052604160045260246000fd5b92919267ffffffffffffffff82116113c85760405191611408601f8201601f1916602001846113a6565b82948184528183011161138b578281602093846000960137010152565b90600182811c92168015611455575b602083101461143f57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611434565b906040519182600082549261147384611425565b80845293600181169081156114e1575060011461149a575b50611498925003836113a6565b565b90506000929192526020600020906000915b8183106114c5575050906020611498928201013861148b565b60209193508060019154838589010152019101909184926114ac565b90506020925061149894915060ff191682840152151560051b8201013861148b565b919082519283825260005b84811061152f575050826000602080949584010152601f8019910116010190565b8060208092840101518282860101520161150e565b9060028210156115515752565b634e487b7160e01b600052602160045260246000fd5b9080601f8301121561138b57816020611582933591016113de565b90565b1561158c57565b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a5908185d58dd1a5bdb9259607a1b6044820152606490fd5b156115cc57565b60405162461bcd60e51b815260206004820152601960248201527f41756374696f6e20686173206e6f7420656e64656420796574000000000000006044820152606490fd5b9190820180921161161e57565b634e487b7160e01b600052601160045260246000fd5b1561163b57565b606460405162461bcd60e51b815260206004820152602060248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152fd5b6116c46114989392611692841515611634565b60405163a9059cbb60e01b60208201526001600160a01b03909116602482015260448101939093528260648101610bea565b6001600160a01b03165b906000602091828151910182855af115611729576000513d61172057506001600160a01b0381163b155b6116ff5750565b635274afe760e01b60009081526001600160a01b0391909116600452602490fd5b600114156116f8565b6040513d6000823e3d90fdfea26469706673582212200ddbf55a6d0358a9c153d842a1194c3a492a9affce5b9de39f1cfb30d133575464736f6c634300081c0033";

type EnglishAuctionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EnglishAuctionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EnglishAuction__factory extends ContractFactory {
  constructor(...args: EnglishAuctionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EnglishAuction & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EnglishAuction__factory {
    return super.connect(runner) as EnglishAuction__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnglishAuctionInterface {
    return new Interface(_abi) as EnglishAuctionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EnglishAuction {
    return new Contract(address, _abi, runner) as unknown as EnglishAuction;
  }
}
