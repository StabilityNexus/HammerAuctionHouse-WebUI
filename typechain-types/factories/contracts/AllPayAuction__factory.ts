/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  AllPayAuction,
  AllPayAuctionInterface,
} from "../../contracts/AllPayAuction";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "Id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "imgUrl",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "auctioneer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum Auction.AuctionType",
        name: "auctionType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "auctionedToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "auctionedTokenIdOrAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "biddingToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startingBid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minBidDelta",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadlineExtension",
        type: "uint256",
      },
    ],
    name: "AuctionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bidAmount",
        type: "uint256",
      },
    ],
    name: "bidPlaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountWithdrawn",
        type: "uint256",
      },
    ],
    name: "fundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "auctionedTokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "auctionedTokenIdOrAmount",
        type: "uint256",
      },
    ],
    name: "itemWithdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "auctionCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "auctions",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "imgUrl",
        type: "string",
      },
      {
        internalType: "address",
        name: "auctioneer",
        type: "address",
      },
      {
        internalType: "enum Auction.AuctionType",
        name: "auctionType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "auctionedToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "auctionedTokenIdOrAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "biddingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "startingBid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "availableFunds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minBidDelta",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "highestBid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadlineExtension",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isClaimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "bids",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "imgUrl",
        type: "string",
      },
      {
        internalType: "enum Auction.AuctionType",
        name: "auctionType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "auctionedToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "auctionedTokenIdOrAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "biddingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "startingBid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minBidDelta",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadlineExtension",
        type: "uint256",
      },
    ],
    name: "createAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bidAmount",
        type: "uint256",
      },
    ],
    name: "placeBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
    ],
    name: "withdrawItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346019576000805561167c908161001f8239f35b600080fdfe60a0604052600436101561001257600080fd5b6000803560e01c8063150b7a02146112b9578063155dd5ee146111785780633f1ffcec14611134578063571a26a014610fab57806357c90de514610cce5780638d9a3e93146109f9578063a7e76644146109dc5763fe230fa91461007557600080fd5b346109d9576101603660031901126109d95760043567ffffffffffffffff81116109d7576100a7903690600401611513565b60243567ffffffffffffffff81116109d3576100c7903690600401611513565b9060443567ffffffffffffffff81116109cf576100e8903690600401611513565b600260643510156109cf57608435906001600160a01b03821682036109cb5760c4356001600160a01b03811681036109c7576101243584511561098b576001600160a01b03841615610935576001600160a01b038216156108e157801561089257606435610834576001600160a01b0384163b1561082557604051632142170760e11b815233600482015230602482015260a435604482015287908181606481836001600160a01b038b165af1801561082957610810575b50506101ad905b42611571565b91865460405190610220820182811067ffffffffffffffff8211176107fc5760405280825286602083015287604083015282606083015233608083015260643560a083015260018060a01b03861660c083015260a43560e083015260018060a01b03841661010083015260e435610120830152886101408301526101043561016083015288610180830152336101a0830152846101c0830152610144356101e083015288610200830152885260016020526040882081518155602082015180519067ffffffffffffffff821161065257819061028c60018501546113d1565b601f81116107aa575b50602090601f831160011461073c578c92610731575b50508160011b916000199060031b1c19161760018201555b604082015180519067ffffffffffffffff82116106525781906102e960028501546113d1565b601f81116106df575b50602090601f8311600114610671578c92610666575b50508160011b916000199060031b1c19161760028201555b606082015180519067ffffffffffffffff821161065257819061034660038501546113d1565b601f8111610600575b50602090601f8311600114610597578c9261058c575b50508160011b916000199060031b1c19161760038201555b60808201516004820180546001600160a01b0319166001600160a01b039290921691909117905560a082015160028110156105785760048201805460ff60a01b191660a09290921b60ff60a01b1691909117905560c08201516005820180546001600160a01b03199081166001600160a01b039384161790915560e08401516006840155610100840151600784018054831691841691909117905561012084015160088401556101408401516009840155610160840151600a840155610180840151600b8401556101a0840151600c8401805490921692169190911790556101c0820151600d8201556101e0820151600e8201556102009190910151600f909101805491151560ff1660ff1992909216919091179055865495600019871461056457916105077fa76b9e3326fbfce8aacfe521d87982a0bdadbc6590ec30224be8d11fe6c54b279694926104f96104eb979560018b018c556040519889986101808a526101808a01906114af565b9088820360208a01526114af565b9086820360408801526114af565b9233606086015261051d608086016064356114f0565b6001600160a01b0390811660a086015260a43560c08601521660e084015260e43561010084015261010435610120840152610140830152610144356101608301520390a280f35b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b8a52602160045260248afd5b015190503880610365565b600385018d52818d209250601f1984168d5b8181106105e857509084600195949392106105cf575b505050811b01600382015561037d565b015160001960f88460031b161c191690553880806105bf565b929360206001819287860151815501950193016105a9565b909150600384018c5260208c20601f840160051c81016020851061064b575b84939291908e5b601f840160051c8301821061063d5750505061034f565b81558594506001018e610626565b508061061f565b634e487b7160e01b8b52604160045260248bfd5b015190503880610308565b9250600284018c52808c20908c935b601f19841685106106c4576001945083601f198116106106ab575b505050811b016002820155610320565b015160001960f88460031b161c1916905538808061069b565b81810151835560209485019460019093019290910190610680565b909150600284018c5260208c20601f840160051c81016020851061072a575b84939291908e5b601f840160051c8301821061071c575050506102f2565b81558594506001018e610705565b50806106fe565b0151905038806102ab565b9250600184018c52808c20908c935b601f198416851061078f576001945083601f19811610610776575b505050811b0160018201556102c3565b015160001960f88460031b161c19169055388080610766565b8181015183556020948501946001909301929091019061074b565b909150600184018c5260208c20601f840160051c8101602085106107f5575b84939291908e5b601f840160051c830182106107e757505050610295565b81558594506001018e6107d0565b50806107c9565b634e487b7160e01b8a52604160045260248afd5b8161081a91611352565b6108255786386101a0565b8680fd5b6040513d84823e3d90fd5b6101ad9061084560a4351515611594565b6040516323b872dd60e01b602082015233602482015230604482015260a435606480830191909152815261088d9061087e608482611352565b6001600160a01b0387166115df565b6101a7565b60405162461bcd60e51b815260206004820152602160248201527f4475726174696f6e2073686f756c642062652067726561746572207468616e206044820152600360fc1b6064820152608490fd5b60405162461bcd60e51b815260206004820152602660248201527f42696464696e6720746f6b656e2061646472657373206d7573742062652070726044820152651bdd9a59195960d21b6064820152608490fd5b60405162461bcd60e51b815260206004820152602860248201527f41756374696f6e656420746f6b656e2061646472657373206d757374206265206044820152671c1c9bdd9a59195960c21b6064820152608490fd5b60405162461bcd60e51b815260206004820152601460248201527313985b59481b5d5cdd081899481c1c995cd95b9d60621b6044820152606490fd5b8580fd5b8480fd5b8380fd5b8280fd5b505b80fd5b50346109d957806003193601126109d95760209054604051908152f35b50346109d95760203660031901126109d95760043590610a1b81548310611531565b818152600160205260408120600c81018054909391906001600160a01b03163303610c9457600d810154421115610c4f57600f8101805460ff8116610c0a5760ff19166001179055600481015460a01c60ff16906002821015610bf65760058101805460069092018054909391926001600160a01b031691610b7957813b156109c757604051632142170760e11b815230600482015233602482015260448101919091529085908290606490829084905af18015610b6e57610b36575b50610b307f0c0a9cbb25df0ac8d473828f09da92621e93a8ecc1b2054a17700ccaf2053a1c9394955b5491549254604080516001600160a01b0394851681529490931660208501529183019190915281906060820190565b0390a280f35b84610b667f0c0a9cbb25df0ac8d473828f09da92621e93a8ecc1b2054a17700ccaf2053a1c9596610b3093611352565b949350610ad8565b6040513d87823e3d90fd5b95610bf1610bde610b3093610bec8a610bb67f0c0a9cbb25df0ac8d473828f09da92621e93a8ecc1b2054a17700ccaf2053a1c9a9b9c1515611594565b60405163a9059cbb60e01b602082015233602482015260448101919091529283906064820190565b03601f198101845283611352565b6115df565b610b01565b634e487b7160e01b84526021600452602484fd5b60405162461bcd60e51b815260206004820152601860248201527f41756374696f6e20686164206265656e20736574746c656400000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f41756374696f6e20686173206e6f7420656e64656420796574000000000000006044820152606490fd5b60405162461bcd60e51b81526020600482015260126024820152712737ba1030bab1ba34b7b7103bb4b73732b960711b6044820152606490fd5b50346109d95760403660031901126109d957600435602435610cf283548310611531565b81835260016020526040832090600d8201908154421015610f7257600b830180548015908180158093610f42575b15610ee75791610ea6575b5015610e3b577fb709f01451ed0783e7600e0c31d1df63da03b66b3caf7cddde880f0774332ba693610b3093610e239287895260026020526040892060018060a01b0333168a5260205260408920610d84868254611571565b9055878952600260209081526040808b2033808d5292528a2054909155600c830180546001600160a01b0319169091179055600982018054610dc7908690611571565b9055610dd8600e8301548254611571565b9055600701546001600160a01b0316610df2831515611594565b6040516323b872dd60e01b60208201523360248201523060448201526064810184905290610bec8260848101610bde565b60408051338152602081019290925290918291820190565b60405162461bcd60e51b815260206004820152603b60248201527f42696420616d6f756e742073686f756c64206578636565642063757272656e7460448201527f206269642062792061746c65617374206d696e42696444656c746100000000006064820152608490fd5b905085875260026020526040872060018060a01b0333168852602052610edf610ed38460408a2054611571565b91600a87015490611571565b111538610d2b565b60405162461bcd60e51b815260206004820152602d60248201527f4669727374206269642073686f756c642062652067726561746572207468616e60448201526c081cdd185c9d1a5b99c8189a59609a1b6064820152608490fd5b50878952600260209081526040808b20338c52909152892054610f66908690611571565b60088801541115610d20565b60405162461bcd60e51b8152602060048201526011602482015270105d58dd1a5bdb881a185cc8195b991959607a1b6044820152606490fd5b50346109d95760203660031901126109d9576004358152600160205260409020805460018201610fda9061140b565b91610fe76002820161140b565b92610ff46003830161140b565b93600483015494600160a01b600190036005850154166006850154600160a01b60019003600787015416600887015490600988015492600a89015494600b8a015496600160a01b60019003600c8c01541698600d8c01549a600e8d01549c600f015460ff169d6040516080526080515260805160200161022090526080516102200161107f916114af565b608051810360805160400152611094916114af565b6080518103608051606001526110a9916114af565b608080516001600160a01b038f169082015251909c6110d29160a09081019160ff911c166114f0565b60805160c0015260805160e00152608051610100015260805161012001526080516101400152608051610160015260805161018001526080516101a001526080516101c001526080516101e00152151560805161020001526080519003608051f35b50346109d95760403660031901126109d957604060209161115361133c565b6004358252600284528282206001600160a01b03909116825283522054604051908152f35b50346109d95760203660031901126109d95760043561119982548210611531565b808252600160208181526040808520848652929091528320600401546001600160a01b031633036112825760098101805480159283611248577f85470dff43902d75670eac38df826d0456b2ba2939a2e8662959a8143013554d9361121461123e928860209655600760018060a01b03910154169115611594565b60405163a9059cbb60e01b858201523360248201526044810184905290610bec8260648101610bde565b604051908152a280f35b60405162461bcd60e51b81526020600482015260126024820152714e6f2066756e647320617661696c61626c6560701b6044820152606490fd5b60405162461bcd60e51b815260206004820152600f60248201526e4e6f742061756374696f6e6565722160881b6044820152606490fd5b50346109d95760803660031901126109d9576112d3611321565b506112dc61133c565b5060643567ffffffffffffffff81116109d757366023820112156109d75761130e90369060248160040135910161138a565b50604051630a85bd0160e11b8152602090f35b600435906001600160a01b038216820361133757565b600080fd5b602435906001600160a01b038216820361133757565b90601f8019910116810190811067ffffffffffffffff82111761137457604052565b634e487b7160e01b600052604160045260246000fd5b92919267ffffffffffffffff821161137457604051916113b4601f8201601f191660200184611352565b829481845281830111611337578281602093846000960137010152565b90600182811c92168015611401575b60208310146113eb57565b634e487b7160e01b600052602260045260246000fd5b91607f16916113e0565b906040519182600082549261141f846113d1565b808452936001811690811561148d5750600114611446575b5061144492500383611352565b565b90506000929192526020600020906000915b8183106114715750509060206114449282010138611437565b6020919350806001915483858901015201910190918492611458565b90506020925061144494915060ff191682840152151560051b82010138611437565b919082519283825260005b8481106114db575050826000602080949584010152601f8019910116010190565b806020809284010151828286010152016114ba565b9060028210156114fd5752565b634e487b7160e01b600052602160045260246000fd5b9080601f830112156113375781602061152e9335910161138a565b90565b1561153857565b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a5908185d58dd1a5bdb9259607a1b6044820152606490fd5b9190820180921161157e57565b634e487b7160e01b600052601160045260246000fd5b1561159b57565b606460405162461bcd60e51b815260206004820152602060248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152fd5b906000602091828151910182855af11561163a576000513d61163157506001600160a01b0381163b155b6116105750565b635274afe760e01b60009081526001600160a01b0391909116600452602490fd5b60011415611609565b6040513d6000823e3d90fdfea2646970667358221220402ff1bf6c6a68c09e9914cef065f2863b11fbea7738529fb411d649e28023ca64736f6c634300081c0033";

type AllPayAuctionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AllPayAuctionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AllPayAuction__factory extends ContractFactory {
  constructor(...args: AllPayAuctionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AllPayAuction & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AllPayAuction__factory {
    return super.connect(runner) as AllPayAuction__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AllPayAuctionInterface {
    return new Interface(_abi) as AllPayAuctionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AllPayAuction {
    return new Contract(address, _abi, runner) as unknown as AllPayAuction;
  }
}
